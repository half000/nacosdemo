#hs headless服务用来提供pod的域名，服务域名解析结果为pod域名列表
---
apiVersion: v1
kind: Service
metadata:
  name: nacos-hs
  labels:
    app: nacos-hs
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 8848
      name: server
      targetPort: 8848
    - port: 7848
      name: rpc
      targetPort: 7848
  selector:
    app: nacos
#cm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nacos-cm
data:
  #nacos/nacos-mysql github查不到镜像文件，放弃 用本地数据库
  mysql.host: "192.168.0.101"
  mysql.db.name: "nacos_config"
  mysql.port: "3306"
  mysql.user: "root"
  mysql.password: "root"

#PVC  sts可以用模板
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: nacos-pvc
#spec:
#  storageClassName: managed-nfs-storage
#  accessModes:
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: 2Gi
# sts
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nacos
spec:
  serviceName: nacos-hs
  replicas: 1
  template:
    metadata:
      labels:
        app: nacos
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      affinity:
        #反亲和设置，一个node只能有一个pod
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - nacos
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: k8snacos
          imagePullPolicy: IfNotPresent
          image: nacos/nacos-server:latest
          resources:
            requests:
              memory: "500Mi"
              cpu: "300m"
            limits:
              memory: "1Gi"
              cpu: "500"
          ports:
            - containerPort: 8848
              name: client
            - containerPort: 7848
              name: rpc
          env:
            - name: MODE
              value: "standalone"
            # jvm 参数
            - name: JVM_XMS
              value: "300m"
            - name: JVM_XMX
              value: "300m"
            - name: JVM_XMN
              value: "100m"
            # 集群才生效
            #- name: JVM_MS
            #  value: "40m"
            #- name: JVM_MMS
            #  value: "60m"
            #没看到哪里有用到
            - name: NACOS_REPLICAS
              value: "3"
              #mysql配置
            - name: SPRING_DATASOURCE_PLATFORM
              value: "mysql"
            - name: MYSQL_SERVICE_DB_PARAM
              value: "serverTimezone=Asia/Shanghai&characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true"
            - name: MYSQL_SERVICE_HOST
              valueFrom:
                configMapKeyRef:
                  name: nacos-cm
                  key: mysql.host
            - name: MYSQL_SERVICE_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: nacos-cm
                  key: mysql.db.name
            - name: MYSQL_SERVICE_PORT
              valueFrom:
                configMapKeyRef:
                  name: nacos-cm
                  key: mysql.port
            - name: MYSQL_SERVICE_USER
              valueFrom:
                configMapKeyRef:
                  name: nacos-cm
                  key: mysql.user
            - name: MYSQL_SERVICE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: nacos-cm
                  key: mysql.password
            - name: NACOS_SERVER_PORT
              value: "8848"
            - name: NACOS_APPLICATION_PORT
              value: "8848"
              # 域名需要配置麻烦。。
              #- name: PREFER_HOST_MODE
              #  value: "hostname"
              #单机不需要配置
              #- name: NACOS_SERVERS
              #value: "nacos-0.nacos-hs.default.svc.cluster.local:8848 nacos-1.nacos-hs.default.svc.cluster.local:8848 nacos-2.nacos-hs.default.svc.cluster.local:8848"
          volumeMounts:
            - name: datadir
              mountPath: /home/nacos/data
            #- name: logdir
            #  mountPath: /home/nacos/logs
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: [ "ReadWriteMany" ]
        storageClassName: managed-nfs-storage
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: logdir
      #过时了
      #       annotations:
      #          volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
      spec:
        accessModes: [ "ReadWriteMany" ]
        storageClassName: managed-nfs-storage
        resources:
          requests:
            storage: 1Gi
  selector:
    matchLabels:
      app: nacos

